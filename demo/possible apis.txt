* getFieldsByClass {Done}
* getMethodsByClass {Done}
* getMethodCallsByMethod {Done}
  * MethodCall need to know about params {Done}
* getDescandents {Done}
* getSubclasses {Done}
* isConcrete(String classNmae) {Done}
  *Already has isAbstract and isInterface {Done}
* getClassesByPackage {Done}
* getClasses {Done}
* getConstructors {Done}
* getAncesters {Done}
* Separate IClassInfo from PatternController, and make it a singleton {Done}


* Divide UML visit logic into phases {Done}
  * Load {Done}
  * Pattern Detection {Done}
  * Output {Done}
  * Convert patterns to ClassInfo {Done}

Properties
  Adapter / Decorator Threshold {Done}
  Singleton-RequireGetInstance (check if a method returns the classType and named getInstance()) {Done}
  All other properties {Done}
  Input Folder support

GUI
  GUI
  PatternViewVisitor

Test
  Fix regression for pattern detectors