digraph G {
rankdir=BT;
fontname = "Times New Roman"
fontsize = 12
node [
fontname = "Times New Roman"
fontsize = 12
shape = "record"
]
"java.io.OutputStream" [
color=black
fillcolor="green"
style=filled
label = "{«abstract»\njava.io.OutputStream
«Target»||+ write(i0 : int): void\l+ write(b0 : byte[]): void\l+ write(b0 : byte[], i1 : int, i2 : int): void\l+ flush(): void\l+ close(): void\l}"
]
edge [
style = "dashed"
arrowhead = "empty"
]
"java.io.OutputStream" -> "java.io.Closeable"
"java.io.OutputStream" -> "java.io.Flushable"
edge [
style = "solid"
arrowhead = "empty"
]
edge [
style = "dashed"
arrowhead = "vee"
]
edge [label=" "]
"ragdoll.asm.uml.test.sample.decorator.EncryptionOutputStream" [
color=black
fillcolor="green"
style=filled
label = "{ragdoll.asm.uml.test.sample.decorator.EncryptionOutputStream
«Decorator»|- encryptor : ragdoll.asm.uml.test.sample.decorator.IEncryption\l|+ write(i0 : int): void\l}"
]
edge [
style = "dashed"
arrowhead = "empty"
]
edge [
style = "solid"
arrowhead = "empty"
]
"ragdoll.asm.uml.test.sample.decorator.EncryptionOutputStream" -> "java.io.FilterOutputStream"
edge [
style = "dashed"
arrowhead = "vee"
]
edge [
style = "solid"
arrowhead = "vee"
label = " "
]
"ragdoll.asm.uml.test.sample.decorator.EncryptionOutputStream" -> "ragdoll.asm.uml.test.sample.decorator.IEncryption"
edge [
style = "solid"
arrowhead = "vee"
label = "decorate"
]
"ragdoll.asm.uml.test.sample.decorator.EncryptionOutputStream" -> "java.io.OutputStream"
edge [label=" "]
"java.io.FilterOutputStream" [
color=black
fillcolor="green"
style=filled
label = "{java.io.FilterOutputStream
«Decorator»|# out : java.io.OutputStream\l|+ write(i0 : int): void\l+ write(b0 : byte[]): void\l+ write(b0 : byte[], i1 : int, i2 : int): void\l+ flush(): void\l+ close(): void\l}"
]
edge [
style = "dashed"
arrowhead = "empty"
]
edge [
style = "solid"
arrowhead = "empty"
]
"java.io.FilterOutputStream" -> "java.io.OutputStream"
edge [
style = "dashed"
arrowhead = "vee"
]
edge [
style = "solid"
arrowhead = "vee"
label = "decorate"
]
"java.io.FilterOutputStream" -> "java.io.OutputStream"
edge [label=" "]
}

